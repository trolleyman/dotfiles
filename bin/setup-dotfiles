#!/bin/bash

usage() {
    echo "Usage: $0 [-f]" 1>&2
    echo "       -f: force (remove existing files)" 1>&2
    exit 1
}

force=
while getopts ":hf" o; do
    case "${o}" in
        f)
            force=1
            ;;
        h)
            usage
            ;;
        *)
            usage
            ;;
    esac
done



function do_link() {
    if [[ -L "$2" ]]; then
        (set -x; unlink "$2")
    fi
    if [[ -n "$force" && -e "$2" ]]; then
        (set -x; rm -rf "$2")
    fi
    (set -x; ln -s "$1" "$2")
}

set -e

# Dircolors
do_link ~/.dotfiles/dir_colors ~/.dir_colors

# Bash
do_link ~/.dotfiles/bash/bashrc ~/.bashrc
do_link ~/.dotfiles/bash/bash_profile ~/.bash_profile
do_link ~/.dotfiles/bash/bash_logout ~/.bash_logout

# SSH
mkdir -p ~/.ssh/
mkdir -p ~/.ssh/control-master/
do_link ~/.dotfiles/ssh/config ~/.ssh/config
# Ensure that SSH config has the correct permissions
chmod 644 ~/.dotfiles/ssh/config

# gpg
mkdir -p ~/.gnupg/
do_link ~/.dotfiles/gnupg/gpg-agent.conf ~/.gnupg/gpg-agent.conf

# Inputrc
do_link ~/.dotfiles/inputrc ~/.inputrc

# Vim
do_link ~/.dotfiles/vim/vimrc ~/.vimrc
do_link ~/.dotfiles/vim ~/.vim

# tmux
do_link ~/.dotfiles/tmux.conf ~/.tmux.conf

# GDB
do_link ~/.dotfiles/gdb-dashboard/.gdbinit ~/.gdbinit
do_link ~/.dotfiles/gdbinit.d ~/.gdbinit.d

# ZSH
do_link ~/.dotfiles/zsh/zshrc ~/.zshrc

# Fish
mkdir -p ~/.config/fish/
do_link ~/.dotfiles/fish/config.fish ~/.config/fish/config.fish

